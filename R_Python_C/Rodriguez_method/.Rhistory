knitr::opts_chunk$set(echo = TRUE)
myPaths <- .libPaths()
myPaths <- c(myPaths[2], myPaths[1])
.libPaths(myPaths)
knitr::opts_chunk$set(echo = TRUE)
install.packages("rmarkdown")
install.packages("rmarkdown")
update.packages(ask = FALSE)
install.packages("Rcpp")
knitr::opts_chunk$set(echo = TRUE)
installed.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("magrittr")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
writeLines(strsplit(Sys.getenv("PATH"), ";")[[1L]])
library(Rcpp)
source("RcppExports.R")
source("plotDensityClust.R")
source("densityClust.R")
sourceCpp("RcppExports.cpp")
install.Rtools()
irisDist <- dist(iris[,1:4])
irisClust <- densityClust(irisDist, gaussian=TRUE)
pkgbuild::find_rtools(debug = TRUE)
.libPaths()
install.packages("Rcpp")
install.packages("Rcpp")
knitr::opts_chunk$set(echo = TRUE)
writeLines(strsplit(Sys.getenv("PATH"), ";")[[1L]])
library(Rcpp)
source("RcppExports.R")
source("plotDensityClust.R")
source("densityClust.R")
sourceCpp("RcppExports.cpp")
install.Rtools()
update.packages(ask = FALSE)
myPaths <- .libPaths()
myPaths <- c(myPaths[2], myPaths[1])
.libPaths(myPaths)
knitr::opts_chunk$set(echo = TRUE)
install.packages("rmarkdown")
update.packages(ask = FALSE)y
install.packages("rmarkdown")
update.packages(ask = FALSE)
install.packages("Rcpp")
install.packages("knitr")
install.packages("knitr")
install.packages("Rcpp")
Sys.getenv("PATH")
path <- Sys.getenv("PATH")
path <- c("C:\\RBuildTools\\3.3\\bin", "C:\\RBuildTools\\3.3\\gcc-4.6.3\\bin", path)
install.packages("installr")
install.Rtools()
installr::install.Rtools()
warnings()
Sys.setenv(PATH = paste("C:/Program Files/R/Rtools/bin", Sys.getenv("PATH"), sep=";"))
Sys.setenv(BINPREF = "C:/Program Files/R/Rtools/mingw_$(WIN)/bin/")
knitr::opts_chunk$set(echo = TRUE)
install.packages("rmarkdown")
update.packages(ask = FALSE)
install.packages("Rcpp")
Sys.which("make")
Sys.which()
Sys.which("bash")
setwd("C:/Users/dhanu/Documents/DhanujG/Projects/Unsupervised Clustering Analysis for Competitive Species Traits/R/mod")
knitr::opts_chunk$set(echo = TRUE)
writeLines(strsplit(Sys.getenv("PATH"), ";")[[1L]])
library(Rcpp)
source("RcppExports.R")
source("plotDensityClust.R")
source("densityClust.R")
#sourceCpp("RcppExports.cpp")
sourceCpp("localDensity.cpp")
sourceCpp("findDistValueByRowColInd.cpp")
sourceCpp("distanceToPeak.cpp")
iris <- iris
irisDist <- dist(iris[,1:4])
irisClust <- densityClust(irisDist, gaussian=TRUE)
plot(irisClust) # Inspect clustering attributes to define thresholds
irisClust <- findClusters(irisClust, rho=2, delta=2)
plotMDS(irisClust)
split(iris[,5], irisClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCI_3_Null <- read.csv(file.choose())
total = nrow(BCI_3_Null)
BCI_3_Format <- data.frame("Cord1" =  double(), "Cord2" = double())
for (i in 1:total){
for (j in 1:(BCI_3_Null[i,3])){
newRow <- BCI_3_Null[i,1:2]
BCI_3_Format<- rbind(BCI_3_Format, newRow)
}
}
same = 0
frame = BCI_3_Null
total = nrow(frame)
for (i in 1:total){
for (j in 1:total){
if ((i != j) & (frame[i,1] == frame[j,1]) & (frame[i,2] == frame[j,2])){
same = 1
cat("same value detected at rows ")
i
j
}
}
}
if (same == 0){
cat("no rows same ")
}
BCIDist <- dist(BCI_3_Null[,1:2])
d = as.matrix(BCIDist)
same = 0
total = nrow(d)
for (i in 1:total){
for (j in 1:total){
if ((i != j) & (d[i,j] == 0.0)){
same = 1
cat("same dist detected at rows ")
i
j
}
}
}
if (same == 0){
cat("no dist = 0 ")
}
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=TRUE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=2.5, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
setwd("C:/Users/dhanu/Documents/DhanujG/Projects/Unsupervised Clustering Analysis for Competitive Species Traits/R/test")
knitr::opts_chunk$set(echo = TRUE)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=FALSE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=2.5, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=FALSE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=5, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
#install.packages("rmarkdown")
#update.packages(ask = FALSE)
#install.packages("Rcpp")
knitr::opts_chunk$set(echo = TRUE)
writeLines(strsplit(Sys.getenv("PATH"), ";")[[1L]])
library(Rcpp)
source("RcppExports.R")
source("plotDensityClust.R")
source("densityClust.R")
#sourceCpp("RcppExports.cpp")
sourceCpp("localDensity.cpp")
sourceCpp("findDistValueByRowColInd.cpp")
sourceCpp("distanceToPeak.cpp")
iris <- iris
irisDist <- dist(iris[,1:4])
irisClust <- densityClust(irisDist, gaussian=TRUE)
plot(irisClust) # Inspect clustering attributes to define thresholds
irisClust <- findClusters(irisClust, rho=2, delta=2)
plotMDS(irisClust)
split(iris[,5], irisClust$clusters)
BCI_3_Null <- read.csv(file.choose())
total = nrow(BCI_3_Null)
BCI_3_Format <- data.frame("Cord1" =  double(), "Cord2" = double())
for (i in 1:total){
for (j in 1:(BCI_3_Null[i,3])){
newRow <- BCI_3_Null[i,1:2]
BCI_3_Format<- rbind(BCI_3_Format, newRow)
}
}
same = 0
frame = BCI_3_Null
total = nrow(frame)
for (i in 1:total){
for (j in 1:total){
if ((i != j) & (frame[i,1] == frame[j,1]) & (frame[i,2] == frame[j,2])){
same = 1
cat("same value detected at rows ")
i
j
}
}
}
if (same == 0){
cat("no rows same ")
}
BCIDist <- dist(BCI_3_Format[,1:2])
d = as.matrix(BCIDist)
same = 0
total = nrow(d)
for (i in 1:total){
for (j in 1:total){
if ((i != j) & (d[i,j] == 0.0)){
same = 1
cat("same dist detected at rows ")
i
j
}
}
}
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=TRUE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=2.5, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=FALSE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=5, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
iris <- iris
irisDist <- dist(iris[,1:4])
irisClust <- densityClust(irisDist, gaussian=TRUE)
plot(irisClust) # Inspect clustering attributes to define thresholds
irisClust <- findClusters(irisClust, rho=2, delta=2)
plotMDS(irisClust)
split(iris[,5], irisClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=TRUE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=2.5, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=TRUE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=4, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=FALSE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=5, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=FALSE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=5, delta=0.15)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=TRUE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=8, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
BCIDist <- dist(BCI_3_Null[,1:2])
BCIClust <- densityClust(BCIDist, gaussian=TRUE)
plot(BCIClust) # Inspect clustering attributes to define thresholds
BCIClust <- findClusters(BCIClust, rho=4, delta=0.1)
plotMDS(BCIClust)
#split(iris[,5], BCIClust$clusters)
